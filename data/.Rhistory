"Seems like a really challenging course."
The link to Tzu-lin's Github repository:
<https://github.com/tzsu/IODS-project>
---
title: "Intro to Open Data Science"
---
This course seems really challenging!
"This course seems really challenging!"
library(dplyr)
install.packages("dplyr")
library(dplyr)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014 <- select(lrn14, one_of(keep_columns))
library(dplyr)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014 <- select(lrn14, one_of(keep_columns))
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
dim(lrn14)
str(lrn14)
learning2014 <- select(lrn14, one_of(keep_columns))
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014 <- select(lrn14, one_of(keep_columns))
str(learning2014)
read.csv(student-mat,student-por)
read.csv(file = data, header = student-mat)
read.table("student-mat", header = TRUE)
setwd("~/")
setwd("D:/Sydney Uni/forth semester units of study/Intro to Open Data Science/IODS-project/data")
?as.data.frame
math <- read.table("student-mat.csv", sep = ';' header = TRUE)
math <- read.table('data/student-mat.csv', sep = ';', header = TRUE)
math <- read.table("student-mat.csv", sep = ';', header = TRUE)
View(math)
por <- read.table("student-por.csv", sep = ';', header = TRUE)
View(por)
str(math)
str(por)
dim(math,por)
dim(math)
dim(por)
library(dplyr)
glimpse(math)
glimpse(por)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math",".por"))
View(math_por)
glimpse(math_por)
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
print(notjoined_columns)
# for every column name not used for joining...
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# glimpse at the new combined data
glimpse(alc)
View(alc)
glimpse(alc)
library(dplyr)
library(ggplot2)
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
#glimpse at the joined and modified data
glimpse(alc)
write.table(alc, "alc.txt", row.names = FALSE)
#Name: Tzu-lin
#Date created: 17 Feb, 2017
#Data wrangling in exercise 4 for the next week's data
#read the "Human development" and "Gender inequality" datas into R
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#explore the datasets
str(hd)
dim(hd)
summary(hd)
str(gii)
dim(hd)
summary(gii)
library(dplyr)
#rename the variables to shorten them
names(hd)[1] <- 'hdi.r'
names(hd)[2] <- 'country'
names(hd)[3] <- 'hdi'
names(hd)[4] <- 'life.exp'
names(hd)[5] <- 'exp.y.edu'
names(hd)[6] <- 'mean.y.edu'
names(hd)[7] <- 'gni.cap'
names(hd)[8] <- 'cap.rank.minus.hdi.rank'
names(gii)[1] <- 'g.r'
names(gii)[2] <- 'country'
names(gii)[3] <- 'gii'
names(gii)[4] <- 'mmr'
names(gii)[5] <- 'ad.b.r'
names(gii)[6] <- 'par%'
names(gii)[7] <- 'edu2f'
names(gii)[8] <- 'edu2m'
names(gii)[9] <- 'labf'
names(gii)[10] <- 'labm'
#mutate gender inequality data and create two new variables
gii <- mutate(gii, ratioedu2.fm = (edu2f/edu2m))
gii <- mutate(gii, ratiolab.fm = (labf/labm))
#join together the two datasets using country
human <- inner_join(hd, gii, by= 'country')
#save the new joined data to "data"
write.table(human, file="human.csv", sep= "\t", col.names = TRUE)
#the joined "human" table has 195 obs. and 19 variables.
#end of data wrangling part
View(human)
View(human)
